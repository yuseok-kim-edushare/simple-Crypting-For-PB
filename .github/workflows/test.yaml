name: Test auto gen rel.notes
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: windows-2022

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-tags: true
        fetch-depth: 0

    - name: Get latest release version and Generate release notes
      id: get_latest_release
      run: |
        $latest_release = (Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/releases/latest").tag_name
        Write-Output "Latest release version: $latest_release"
        Write-Output "latest_release=$latest_release" >> $GITHUB_ENV
        $versionParts = $latest_release.Split('.')
        $versionParts[-1] = [int]$versionParts[-1] + 1
        $newVersionString = $versionParts -join '.'
        Write-Output "new_release=$newVersionString" >> $GITHUB_ENV
        $releaseNotes = "## Changes in " + $latest_release + "`n"
        $releaseNotes += (git log HEAD ^$latest_release --oneline)
        $releaseNotes += (git diff HEAD ^$latest_release --compact-summary)
        $releaseNotes | Out-File -FilePath releaseNotes.txt -Encoding utf8
        $releaseNotesContent = Get-Content -Path releaseNotes.txt -Raw
        Write-Output "release_notes<<EOF" >> $GITHUB_ENV
        Write-Output "$releaseNotesContent" >> $GITHUB_ENV
        Write-Output "EOF" >> $GITHUB_ENV
      env:
        latest_release: ${{ env.latest_release }}
        new_release: ${{ env.new_release }}
        release_notes: ${{ env.release_notes }}

    - name: Use the outputs in another step
      run: |
        Write-Output "Using outputs from previous step"
        Write-Output "Latest release: ${{ env.latest_release }}"
        Write-Output "New release: ${{ env.new_release }}"
        Write-Output "Release notes:"
        Write-Output "${{ env.release_notes }}"